<?php
/**
 * Implements the project specific Drupal enhancements (system hooks).
 */

/* --------------------------------------------------
 * Webform Anmeldung: priority select option definition
 * --------------------------------------------------*/

/**
 * Define a custom select list displaying all available nodes of type praxisdialog.
 *
 */
function sozialraum_stadt_webform_select_options_info() {
  $items = array();

  $items['praxisdialoge'] = array(
    'title' => t('Praxisdialoge'),
    'options callback' => '_webform_select_options_entities',
    'options arguments' => array ('praxisdialog'),
  );

  return $items;
}

/**
 * Creates a list of all available entities of a certain type.
 *
 * @param $component
 *   The Webform component array for the select component being displayed.
 * @param $flat
 *   Boolean value indicating whether the returned list needs to be a flat array
 *   of key => value pairs. Select components support up to one level of
 *   nesting, but when results are displayed, the list needs to be returned
 *   without the nesting.
 * @param $arguments
 *   The "options arguments" specified in hook_webform_select_options_info().
 *
 * @return array|null An array of key => value pairs suitable for a select list's #options
 *                    FormAPI property.
 */
function _webform_select_options_entities ($component, $flat, $arguments) {
  // load praxisdialog nodes
  $query = new EntityFieldQuery();
  $query->entityCondition('entity_type', 'node')
    ->entityCondition('bundle', $arguments[0])
    ->propertyCondition('status', 1);
  $result = $query->execute();

  if (isset($result['node'])) {
    $nids = array_keys($result['node']);
    $nodes = node_load_multiple($nids);

    $list = array();
    foreach ($nodes as $node) {
      $list[$node->nid] = $node->title;
    }
    return $list;
  }
  return null;
}

